pragma solidity >=0.7.0 <0.9.0;

contract Pizzarra{

    uint constant size = 10;
    bytes3[size][size] public pizarra;

    event changeColor(address user, uint8 i, uint8 j, bytes3 value, uint256 time);

    constructor () {
    }

    function set(uint8 i, uint8 j, bytes3 value) public {
        require(i < size && j < size);
        pizarra[j][i]=value;
        emit changeColor(msg.sender, i, j, value, block.timestamp);
    }

    function get() public view returns (bytes3[size][size] memory){
        return pizarra;
    }

}

/*
pragma solidity >=0.7.0 <0.9.0;

contract Pizzarra{

    uint constant size = 10;

    bytes3[size][size] public pizarra;

    constructor () {
    }

    function set(uint8 i, uint j, bytes3 value) public {
        require(i < size && j < size);
        pizarra[j][i]=value;
    }

    function get() public view returns (bytes3[size][size] memory){
        return pizarra;
    }

}
{
  abi: [
    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
    {
      anonymous: false,
      inputs: [Array],
      name: 'changeColor',
      type: 'event'
    },
    {
      inputs: [],
      name: 'get',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'pizarra',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function'
    },
    {
      inputs: [Array],
      name: 'set',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function'
    }
  ]
}
{
  '0x608060405234801561001057600080fd5b506106bd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630aaf7826146100465780636d4ce63c14610076578063dccda3b514610094575b600080fd5b610060600480360381019061005b91906102f4565b6100b0565b60405161006d919061036f565b60405180910390f35b61007e6100ef565b60405161008b91906104d2565b60405180910390f35b6100ae60048036038101906100a99190610553565b6101b2565b005b600082600a81106100c057600080fd5b0181600a81106100cf57600080fd5b600a9182820401919006600302915091509054906101000a900460e81b81565b6100f7610268565b6000600a80602002604051908101604052809291906000905b828210156101a957838201600a806020026040519081016040528092919082600a8015610195576020028201916000905b82829054906101000a900460e81b7cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600301906020826002010492830192600103820291508084116101415790505b505050505081526020019060010190610110565b50505050905090565b600a8360ff161080156101c85750600a8260ff16105b6101d157600080fd5b8060008360ff16600a81106101e9576101e86105a6565b5b018460ff16600a81106101ff576101fe6105a6565b5b600a91828204019190066003026101000a81548162ffffff021916908360e81c02179055507f349c9e8a0c64320db8c542bc04050c14cac5881603ec8443997baa617d1f2338338484844260405161025b959493929190610634565b60405180910390a1505050565b604051806101400160405280600a905b610280610296565b8152602001906001900390816102785790505090565b604051806101400160405280600a90602082028036833780820191505090505090565b600080fd5b6000819050919050565b6102d1816102be565b81146102dc57600080fd5b50565b6000813590506102ee816102c8565b92915050565b6000806040838503121561030b5761030a6102b9565b5b6000610319858286016102df565b925050602061032a858286016102df565b9150509250929050565b60007fffffff000000000000000000000000000000000000000000000000000000000082169050919050565b61036981610334565b82525050565b60006020820190506103846000830184610360565b92915050565b6000600a9050919050565b600081905092915050565b6000819050919050565b6000600a9050919050565b600081905092915050565b6000819050919050565b6103d381610334565b82525050565b60006103e583836103ca565b60208301905092915050565b6000602082019050919050565b610407816103aa565b61041181846103b5565b925061041c826103c0565b8060005b8381101561044d57815161043487826103d9565b965061043f836103f1565b925050600181019050610420565b505050505050565b600061046183836103fe565b6101408301905092915050565b6000602082019050919050565b6104848161038a565b61048e8184610395565b9250610499826103a0565b8060005b838110156104ca5781516104b18782610455565b96506104bc8361046e565b92505060018101905061049d565b505050505050565b6000610c80820190506104e8600083018461047b565b92915050565b600060ff82169050919050565b610504816104ee565b811461050f57600080fd5b50565b600081359050610521816104fb565b92915050565b61053081610334565b811461053b57600080fd5b50565b60008135905061054d81610527565b92915050565b60008060006060848603121561056c5761056b6102b9565b5b600061057a86828701610512565b935050602061058b86828701610512565b925050604061059c8682870161053e565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610600826105d5565b9050919050565b610610816105f5565b82525050565b61061f816104ee565b82525050565b61062e816102be565b82525050565b600060a0820190506106496000830188610607565b6106566020830187610616565b6106636040830186610616565b6106706060830185610360565b61067d6080830184610625565b969550505050505056fea264697066735822122036b3783924a202705f687b8449a41eaaf948db92a2450ad242c0093486f6f19064736f6c634300080d0033'
}
*/